{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "VSkript",
	"scopeName": "source.sk",	
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#aliases" },
		{
			"_comment": "Skript Options Section",
			"begin": "^(options?.*)\\:",
			"end": "(?=^(?!(\\#|\\t| |$)))",
			"beginCaptures": {
				"1": { "name": "vskript.options" }
			},
			"patterns": [
				{ "include": "#comment" },
				{
					"match": "([^:]+) *?\\: *?(.+)",
					"captures": {
						"1": { "name": "vskript.options.variable" },
						"2": { "patterns": [
								{ "include": "#sentence" },
								{ "include": "#hexcolor" },
								{ "include": "#comment" }
							] }
					}
				},
				{
					"begin": "^(?:\\t| {4})(loop of|usable in|trigger|parse|event-values|get|add|set|remove(?: all)?|delete|reset|check):",
					"end": "(?=^(?:\\t| {4})?(?!(?:\\#|\\t| |$)))",
					"beginCaptures": { "1": { "name": "vskript.reflect.option" } },
					"patterns": [ { "patterns": [ { "include": "#sentence" } ] } ]
				}
			]
		},
		{
			"_comment": "Skript Command Section",
			"begin": "^(command)(?: (\/?[^ ]+)((?: +?[^ \\:]+)*) *?\\:)?",
			"end": "(?=^(?!(\\#|\\t| |$)))",
			"beginCaptures": {
				"1": { "name": "vskript.command" },
				"2": { "patterns": [ { "include": "#variable.option" } ] },
				"3": { "patterns": [ {
					"match": "\\<([^\\>\\=]+)(?:\\=([^\\>]+))?\\>",
					"captures": {
						"1": { "patterns": [ { "include": "#type" } ] },
						"2": { "patterns": [
							{ "include": "#sentence" },
							{
								"begin": "\\%",
								"end": "\\%",
								"patterns": [
									{ "include": "#sentence" }
								]
							}
						] }
					}
				} ] }
			},
			"patterns": [
				{
					"begin": "^(?:\\t| {4})(aliases|description|usage|permission message|executable by|permission|cooldown|cooldown message|cooldown bypass|cooldown storage)\\:",
					"end": "$",
					"beginCaptures": {
						"1": { "name": "vskript.command.options"},
						"2": {	
							"patterns": [
								{ "include": "#variable"	}
							]
						}
					},
					"patterns": [ { "patterns": [ { "include": "#sentence" } ] } ]
				},
				{
					"begin": "^(?:\\t| {4})(trigger):",
					"end": "(?=^(?!(\\#|\\t| |$)))",
					"beginCaptures": { "1": { "name": "vskript.command.options" } },
					"patterns": [ { "patterns": [ { "include": "#sentence" } ] } ]
				}
			]
		},
		{
			"_comment": "Skript Function Section",
			"begin": "^((?:local )?function) (\\w+\\()(.*)(\\))(?:(?: +(?:\\:\\:|(return)) +([^:]+))?\\:)",
			"end": "(?=^(?!(\\#|\\t| |$)))",
			"beginCaptures": {
				"1": { "name": "vskript.function.keyword" },
				"2": { "name": "vskript.function.name" },
				"3": { "patterns": [ {
					"match": "([^:]+):([^=(),]+)(?:=([^(),]+))?",
					"captures": {
						"1": { "name": "vskript.function.parameter" },
						"2": { "patterns": [ { "include": "#type" } ] },
						"3": { "patterns": [ { "include": "#sentence" } ] }
					}
				} ] },
				"4": { "name": "vskript.function.name" },
				"5": { "name": "vskript.grammar" },
				"6": { "patterns": [ { "include": "#type" } ] }
			},
			"patterns": [ { "patterns": [ { "include": "#sentence" } ] } ]
		},
		{
			"_comment": "Skript Event Section",
			"begin": "^(?:(?:on|every)(?: +(?:[^\\:]*)\\:)?|at(?: +(?:\\d{1,2}\\:\\d{1,2})?\\:)?)",
			"end": "(?=^(?!(\\#|\\t| |$)))",
			"beginCaptures": { "0": { "name": "vskript.event" } },
			"patterns": [ { "patterns": [ { "include": "#sentence" } ] } ]
		},
		{ "include": "#reflect" }
	],

	"repository": {


		"bracket.amall": {
			"begin": "\\(",
			"end": "\\)",
			"patterns": [
				{ "include": "#sentence" },
				{ "include": "#bracket.amall" }
			]
		},


		
		"hexcolor": {
			"match": "\\<\\#\\#[0-9a-fA-F]{3,6}\\>"
		},
	


		"sentence": {
			"patterns": [
				{ "include": "#comment" },
				{
					"_comment": "Grammar Pattern",
					"patterns": [
						{
							"match": "^(?:\\t| {4})*((?:(?:parse )?if(?: (?:any|at least one (of)?|all))?|else(?: (?:parse )?if(?: (?:any|at least one (of)?|all))?)?|then|(?:do )?while|loop(?=[^-])|continue(?: loop)?))\\b",
							"captures": { "1": { "name": "vskript.grammar" } }
						},
						{
							"name": "vskript.grammar",
							"match": "\\b(?:if|return|otherwise|(?:exit|stop)(?:(?:(?: (?:1|a|the|this))? (?:section|loop|conditional))| (\\d+|all) (?:section|loop|conditional)s)?)\\b",
							"captures": {
								"1": { "patterns": [ { "include": "#expr.number"} ] }
							}
						},
						{
							"match": "\\b(where)(?: ?(\\[)([^\\]]*)(\\])(?:\\B|$))?",
							"captures": {
								"1": { "name": "vskript.grammar"},
								"2": { "name": "vskript.grammar"},
								"3": { "patterns": [ { "include": "#sentence"} ] },
								"4": { "name": "vskript.grammar"}
							}
						}
					]
				},
				{ "include": "#expression" },
				{ "include": "#variable" }
			]
		},
		"grammar.condition": {
			"name": "vskript.grammar.condi",
			"match": "\\b((is|are|did|can|has)(n't| not)?|(was|were)(n't| (not|neither))?|(will (not|neither) be|won't be)|do(es)?(n't| not) (have|contain)|contains?|ha(ve|s))\\b"
		},



		"comment": {
			"match": "(\\#\\> ?(.*))|(\\#.*)",
			"captures": {
				"1": { "name": "vskript.docs" },
				"2": { "name": "vskript.docs", "patterns": [
					{
						"match": "(\\@param)(?: ([^ ]*))?",
						"captures": {
							"1": { "name": "vskript.docs.annotation" },
							"2": { "name": "vskript.docs.param" }
						}
					},
					{
						"match": "\\@(return|invisible)",
						"name": "vskript.docs.annotation"
					}
				] },
				"3": { "name": "vskript.comment" }
			}
		},



		"aliases": {
			"begin": "^(aliases)\\:",
			"end": "(?=^(?!(\\#|\\t| |$)))",
			"beginCaptures": {
				"1": { "name": "vskript.aliases" }
			},
			"patterns": [
				{ "include": "#comment" },
				{
					"match": "([^=]+) *?\\= *?(.+)",
					"captures": {
						"1": { "name": "vskript.aliases.variable" },
						"2": { "patterns": [
								{ "include": "#comment" },
								{ "include": "#expr.minecraftitem" },
								{ "include": "#aliases.nbt"}
						] }
					}
				}
			]
		},
		"aliases.nbt": {
			"name": "vskript.aliases.nbt",
			"begin": "\\{",
			"end": "\\}",
			"patterns": [ 
				{ "include": "#aliases.nbt.value"}
			]
		},
		"aliases.nbt.value": {
			"name": "vskript.aliases.nbt.value",
			"begin": "([^':]*)(:)",
			"end": ",|(?=})",
			"beginCaptures": {
				"1": { "name": "vskript.aliases.nbt.key" },
				"2": { "name": "vskript.default" }
			},
			"endCaptures": {
				"0": { "name": "vskript.default" }
			},
			"patterns": [
				{ "include": "#expression" },
				{ "include": "#aliases.nbt.text" },
				{ "include": "#aliases.nbt.array" },
				{ "include": "#aliases.nbt" }
			]
		},
		"aliases.nbt.array": {
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{ "include": "#expression" },
				{ "include": "#aliases.nbt.text" },
				{ "include": "#aliases.nbt.array" },
				{ "include": "#aliases.nbt" }
			]
		},
		"aliases.nbt.text": {
			"name": "vskript.expr.text",
			"begin": "\\'",
			"end": "\\'"
		},



		"expression": {
			"patterns": [
				{ "include": "#expression.text" },
				{
					"name": "vskript.expr.number",
					"match": "\\-?[\\d](\\.\\d)?|true|false"
				},
				{
					"name": "vskript.expr.grammar",
					"match": "(the )?(event\\-\\w*|arg\\-\\w*|loop\\-\\w*(\\-\\d)?|expr\\-\\d+|change value)"
				},
				{
					"name": "vskript.expr.minecraftitem",
					"match": "minecraft\\:[^ \\,]*"
				},
				{
					"begin": "(\\w\\.?)+\\(",
					"end": "\\)",
					"beginCaptures": { "0": { "name": "vskript.expr.function" } },
					"endCaptures": { "0": { "name": "vskript.expr.function" } },
					"patterns": [
						{ "include": "#bracket.amall" },
						{ "include": "#expression"},
						{ "include": "#variable"}
					]
				}
			]
		},
		"expression.text": {
			"name": "vskript.expr.text",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{ "include": "#variable.option" },
				{
					"name": "vskript.default",
					"begin": "\\%",
					"end": "\\%",
					"beginCaptures": { "0": { "name": "vskript.expr.text"} },
					"endCaptures": { "0": { "name": "vskript.expr.text"} },
					"patterns": [ { "include": "#sentence" } ]
				},
				{ "name": "vskript.color.0", "match": "[&§]0|<black>" },
				{ "name": "vskript.color.1", "match": "[&§]1|<(blue|dark blue)>" },
				{ "name": "vskript.color.2", "match": "[&§]2|<(green|dark green)>" },
				{ "name": "vskript.color.3", "match": "[&§]3|<(cyan|aqua|dark cyan|dark aqua|dark turquoise|dark turquois)>" },
				{ "name": "vskript.color.4", "match": "[&§]4|<(red|dark red)>" },
				{ "name": "vskript.color.5", "match": "[&§]5|<(purple|dark purple)>" },
				{ "name": "vskript.color.6", "match": "[&§]6|<(orange|gold|dark yellow)>" },
				{ "name": "vskript.color.7", "match": "[&§]7|<(grey|light grey|gray|light gray|silver)>" },
				{ "name": "vskript.color.8", "match": "[&§]8|<(dark grey|dark gray)>" },
				{ "name": "vskript.color.9", "match": "[&§]9|<(light blue|indigo)>" },
				{ "name": "vskript.color.a", "match": "[&§][Aa]|<(light green|lime,lime green)>" },
				{ "name": "vskript.color.b", "match": "[&§][Bb]|<(light cyan|light aqua|turquoise|turquois|light blue)>" },
				{ "name": "vskript.color.c", "match": "[&§][Cc]|<(light red|pink)>" },
				{ "name": "vskript.color.d", "match": "[&§][Dd]|<(magenta|light purple)>" },
				{ "name": "vskript.color.e", "match": "[&§][Ee]|<(yellow|light yellow)>" },
				{ "name": "vskript.color.f", "match": "[&§][Ff]|<white>" }
			]
		},



		"variable": {
			"patterns": [
				{ "include": "#variable.option" },
				{ "include": "#variable.local" },
				{ "include": "#variable.runtime" },
				{ "include": "#variable.normal" }
			]
		},
		"variable.option": {
			"name": "vskript.options.variable",
			"begin": "\\{\\@",
			"end": "\\}"
		},
		"variable.local": {
			"name": "vskript.variable.local",
			"begin": "\\{\\_",
			"end": "\\}",
			"beginCaptures": { "0": { "name": "vskript.variable.bracket"} },
			"endCaptures": { "0": { "name": "vskript.variable.bracket"} },
			"patterns": [
				{ "include": "#variable.nested" }
			]
		},
		"variable.runtime": {
			"name": "vskript.variable.runtime",
			"begin": "\\{\\-",
			"end": "\\}",
			"beginCaptures": { "0": { "name": "vskript.variable.bracket"} },
			"endCaptures": { "0": { "name": "vskript.variable.bracket"} },
			"patterns": [
				{ "include": "#variable.nested" }
			]
		},
		"variable.normal": {
			"name": "vskript.variable.normal",
			"begin": "\\{",
			"end": "\\}",
			"beginCaptures": { "0": { "name": "vskript.variable.bracket"} },
			"endCaptures": { "0": { "name": "vskript.variable.bracket"} },
			"patterns": [
				{ "include": "#variable.nested" }
			]
		},
		"variable.nested": {
			"patterns": [
				{ "include": "#variable.local" },
				{ "include": "#variable.runtime" },
				{ "include": "#variable.normal" },
				{
					"name": "vskript.variable.bracket",
					"match": "::"
				},
				{
					"name": "vskript.default",
					"begin": "%",
					"end": "%",
					"beginCaptures": { "0": { "name": "vskript.variable.bracket"} },
					"endCaptures": { "0": { "name": "vskript.variable.bracket"} },
					"patterns": [
						{ "include": "#sentence" }
					]
				}
			]
		},

		

		"type": {
			"patterns": [
				{ "name": "vskript.type.attribute",			"match": "\\battribute ?types?\\b" },
				{ "name": "vskript.type.biome",				"match": "\\bbiomes?\\b" },
				{ "name": "vskript.type.block",				"match": "\\bblocks?\\b" },
				{ "name": "vskript.type.blockdata",			"match": "\\bblock ?datas?\\b" },
				{ "name": "vskript.type.boolean",			"match": "\\bbooleans?\\b" },
				{ "name": "vskript.type.cattype",			"match": "\\bcat ?types?\\b" },
				{ "name": "vskript.type.chunk",				"match": "\\bchunks?\\b" },
				{ "name": "vskript.type.clicktype",			"match": "\\bclick ?types?\\b" },
				{ "name": "vskript.type.color",				"match": "\\bcolou?rs?\\b" },
				{ "name": "vskript.type.commandsender",		"match": "\\b(command ?)?senders?\\b" },
				{ "name": "vskript.type.damagecause",		"match": "\\bdamage ?causes?\\b" },
				{ "name": "vskript.type.date",				"match": "\\bdates?\\b" },
				{ "name": "vskript.type.difficulty",		"match": "\\bdifficult(ys?|ies)\\b" },
				{ "name": "vskript.type.direction",			"match": "\\bdirections?\\b" },
				{ "name": "vskript.type.enchantment",		"match": "\\benchantment( ?type)?s?\\b" },
				{ "name": "vskript.type.entity",			"match": "\\bentit(ys?|ies)( ?type)?s?\\b" },
				{ "name": "vskript.type.experience",		"match": "\\bexperiences?\\b" },
				{ "name": "vskript.type.firework",			"match": "\\bfirework ?(effect|type)s?\\b" },
				{ "name": "vskript.type.gamemode",			"match": "\\bgame ?modes?\\b" },
				{ "name": "vskript.type.gamerule",			"match": "\\bgamerule( value)?s?\\b" },
				{ "name": "vskript.type.gene",				"match": "\\bgenes?\\b" },
				{ "name": "vskript.type.healreasons",		"match": "\\bheal reasons?\\b" },
				{ "name": "vskript.type.integer",			"match": "\\bintegers?\\b" },
				{ "name": "vskript.type.inventory",			"match": "\\binventor(y(( ?(action|slot|type))?s?)|ies)\\b" },
				{ "name": "vskript.type.item",				"match": "\\bitem( ?type)?s?\\b" },
				{ "name": "vskript.type.livingentity",		"match": "\\bliving ?entit(ys?|ies)\\b" },
				{ "name": "vskript.type.location",			"match": "\\blocations?\\b" },
				{ "name": "vskript.type.metadataholder",	"match": "\\bmetadata ?holders?\\b" },
				{ "name": "vskript.type.moonphase",			"match": "\\bmoon ?parses?\\b" },
				{ "name": "vskript.type.number",			"match": "\\bnumbers?\\b" },
				{ "name": "vskript.type.object",			"match": "\\bobjects?\\b" },
				{ "name": "vskript.type.offlineplayer",		"match": "\\boffline ?players?\\b" },
				{ "name": "vskript.type.player",			"match": "\\bplayers?\\b" },
				{ "name": "vskript.type.potioneffecttype",	"match": "\\bpotion ?effect ?types?\\b" },
				{ "name": "vskript.type.projectile",		"match": "\\bprojectiles?\\b" },
				{ "name": "vskript.type.region",			"match": "\\bregions?\\b" },
				{ "name": "vskript.type.resourcepackstate",	"match": "\\bresource ?pack ?states?\\b" },
				{ "name": "vskript.type.servericon",		"match": "\\bserver ?icons?\\b" },
				{ "name": "vskript.type.soundcategory",		"match": "\\bsound categor(ys?|ies)\\b" },
				{ "name": "vskript.type.spawnreason",		"match": "\\bspawn ?reasons?\\b" },
				{ "name": "vskript.type.teleportcause",		"match": "\\bteleport ?causes?\\b" },
				{ "name": "vskript.type.text",				"match": "\\b(text|string)s?\\b" },
				{ "name": "vskript.type.time",				"match": "\\btimes?\\b" },
				{ "name": "vskript.type.timeperiod",		"match": "\\btime ?periods?\\b" },
				{ "name": "vskript.type.timespan",			"match": "\\btimespans?\\b" },
				{ "name": "vskript.type.tree",				"match": "\\btree( ?type)?s?\\b" },
				{ "name": "vskript.type.vector",			"match": "\\bvectors?\\b" },
				{ "name": "vskript.type.visualeffect",		"match": "\\bvisual effects?\\b" },
				{ "name": "vskript.type.weather",			"match": "\\bweather( ?type)?s?\\b" },
				{ "name": "vskript.type.world",				"match": "\\bworlds?\\b" }
			]
		},



		"reflect": {
			"patterns": [
				{
					"_comment": "Reflect Import Section",
					"begin": "^(import)\\:",
					"end": "(?=^(?!(\\#|\\t| |$)))",
					"beginCaptures": {
						"1": { "name": "vskript.reflect.import" }
					},
					"patterns": [
						{
							"match": "(\\w+)\\.?",
							"captures": {
								"1": { "name":"vskript.reflect.import.class" }
							}
						},
						{ "include": "#comment" }
		
					]
				},
				{
					"_comment": "Reflect Section",
					"begin": "^((?:local )?(?:(?:custom )?event|effect|(?:(.*) property)?condition|(?:(?:(?:plural|non(?:\\-| )single) )?expression|(?:(.*) property)))) ?([^:]*)\\:",
					"end": "(?=^(?!(\\#|\\t| |$)))",
					"beginCaptures": {
						"1": { "name": "vskript.reflect.effect" },
						"2": { "patterns": [ { "include": "#type" } ] },
						"3": { "patterns": [ { "include": "#type" } ] },
						"4": { "patterns": [ { "include": "#reflect.pattern" } ] }
					},
					"patterns": [
						{ "include": "#comment" },
						{
							"begin": "^(?:\\t| {4})(patterns?):",
							"end": "(?=^(?:\\t| {4})?(?!(?:\\#|\\t| |$)))",
							"beginCaptures": { "1": { "name": "vskript.reflect.options" } },
							"patterns": [ { "include": "#reflect.pattern" } ]
						},
						{
							"begin": "^(?:\\t| {4})(loop of|usable in|trigger|parse|event-values|get|add|set|remove(?: all)?|delete|reset|check):",
							"end": "(?=^(?:\\t| {4})?(?!(?:\\#|\\t| |$)))",
							"beginCaptures": { "1": { "name": "vskript.reflect.options" } },
							"patterns": [ { "patterns": [ { "include": "#sentence" }, { "include": "#type" } ] } ]
						},
						{
							"begin": "^(?:\\t| {4})(return type|event\\-value):",
							"end": "(?=^(?:\\t| {4})?(?!(?:\\#|\\t| |$)))",
							"beginCaptures": { "1": { "name": "vskript.reflect.options" } },
							"patterns": [
								{ "include": "#type"},
								{ "include": "#comment" }
							]
						}
					]
				}
			]
		},
		"reflect.pattern": {
			"patterns": [
				{
					"begin": "\\%",
					"end": "\\%",
					"patterns": [
						{ "include": "#type" }
					]
				},
				{ "include": "#expression.text" }
			]
		}


		
	}
}